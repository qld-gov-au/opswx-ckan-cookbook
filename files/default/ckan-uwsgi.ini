[uwsgi]

http            =  127.0.0.1:8080
stats           = 127.0.0.1:9191                        ; stats view
uid             =  ckan
gid             =  ckan
wsgi-file       =  /etc/ckan/default/wsgi.py
virtualenv      =  /usr/lib/ckan/default
module          =  wsgi:application
master          =  true
pidfile         =  /tmp/%n.pid
harakiri        =  600                          ; forcefully kill workers after XX seconds
max-requests    =  5000                         ; Restart workers after this many requests
max-worker-lifetime = 3600                      ; Restart workers after this many seconds
reload-on-rss = 1048                            ; Restart workers after this much resident memory
worker-reload-mercy = 5                         ; How long to wait before forcefully killing workers
vacuum          =  true                         ; Delete sockets during shutdown
callable        =  application
buffer-size     =  32768
strict          =  true
; Use lazy apps to avoid the `__Global` error.
; See https://github.com/ckan/ckan/issues/5933#issuecomment-809114593
lazy-apps       = true
log-format      =  %(addr) - %(user) [%(ltime)] "%(method) %(uri) %(proto)" %(status) %(size) "%(referer)" "%(uagent)"

enable-threads  = true
threads         = 1                  ; Threads per worker/process
py-call-osafterfork = true ; Ensure os kill signals propagate to sub threads.
auto-procname   = true ; Give nice name

; Set the number of workers/cheaper to something > 1, otherwise
; only one client can connect via nginx to uWSGI at a time.
; See https://github.com/ckan/ckan/issues/5933

cheaper-algo        = busyness
processes           = 8                 ; Maximum number of workers allowed
cheaper             = 2                 ; Minimum number of workers allowed
cheaper-initial     = 2                 ; Workers created at startup
cheaper-overload    = 1                 ; Length of a cycle in seconds
cheaper-step        = 1                 ; How many workers to spawn at a time


cheaper-busyness-multiplier     = 30    ; How many cycles to wait before killing workers
cheaper-busyness-min            = 20    ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max            = 70    ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert  = 16    ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step   = 2     ; How many emergency workers to create if there are too many requests in the queue
