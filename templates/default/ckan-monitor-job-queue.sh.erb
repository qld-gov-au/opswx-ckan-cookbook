#!/bin/sh

function send_queue_metrics () {
    if [ "$1" = "all" ]; then
        QUEUE=
        QUEUE_LOG="ckan-worker-queue"
        JOB_METRIC_NAME=job
    else
        QUEUE=$1
        QUEUE_LOG="ckan-worker-$QUEUE-queue"
        JOB_METRIC_NAME="${QUEUE}_job"
    fi

    LOG_FILE="/var/log/ckan/${QUEUE_LOG}.log"
    TEMP_FILE="/tmp/${QUEUE_LOG}.log"
    echo "CKAN job $1 queue(s) at $(date):" >> $LOG_FILE
    JOB_COUNT=$(/usr/lib/ckan/default/bin/ckan_cli jobs list $QUEUE 2>/dev/null | tee -a $LOG_FILE | tee $TEMP_FILE | wc -l)
    echo "Total: $JOB_COUNT job(s)" >> $LOG_FILE
    if [ "$JOB_COUNT" -gt 0 ]; then
        OLDEST_TIME=$(date -u --date $(head -1 $TEMP_FILE | awk '{print $1}') +'%s')
        MAX_AGE=$(expr $(date -u +'%s') - $OLDEST_TIME)
        echo "Oldest job is from $OLDEST_TIME ($(expr $MAX_AGE / 60) minute(s) ago)" >> $LOG_FILE
    else
        MAX_AGE=0
    fi
    aws cloudwatch put-metric-data --region <%= node['datashades']['region'] %> --namespace CKAN --metric-data "MetricName=${JOB_METRIC_NAME}_queue_size,Dimensions=[{Name=Application,Value=<%= node['datashades']['app_id'] %>},{Name=Environment,Value=<%= node['datashades']['version'] %>}],Value=$JOB_COUNT" "MetricName=max_${JOB_METRIC_NAME}_age,Dimensions=[{Name=Application,Value=<%= node['datashades']['app_id'] %>},{Name=Environment,Value=<%= node['datashades']['version'] %>}],Value=$MAX_AGE"
}

send_queue_metrics all
send_queue_metrics default
send_queue_metrics bulk
send_queue_metrics priority
