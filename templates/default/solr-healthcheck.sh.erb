#!/bin/sh

MAX_AGE=120
HEARTBEAT_FILE="/data/solr-healthcheck_<%= node['datashades']['hostname'] %>"
# If present, this file marks a server as "just started, may not be updated, don't use yet"
STARTUP_FILE="$HEARTBEAT_FILE.start"

CORE_NAME="<%= node['datashades']['app_id'] %>-<%= node['datashades']['version'] %>"
HOST="http://localhost:8983/solr"
PING_URL="$HOST/$CORE_NAME/admin/ping"

is_healthy () {
    (curl -I "$PING_URL" 2>/dev/null |grep '200 OK' > /dev/null) || return 1
    curl "$HOST/$CORE_NAME/replication?command=backup&location=/tmp&name=health_check" || return 1
    BACKUP_DIR="/tmp/snapshot.health_check"
    LUCENE_JAR=$(ls /opt/solr/server/solr-webapp/webapp/WEB-INF/lib/lucene-core-*.jar | tail -1)
    sudo -u solr java -cp "$LUCENE_JAR" org.apache.lucene.index.CheckIndex "$BACKUP_DIR" >/dev/null || return 1
    rm -r $BACKUP_DIR
}

# Only update heartbeat if it is present.
# This allows us to manually drop a server from the pool
if ! [ -e "$HEARTBEAT_FILE" ]; then
  exit 0
fi

CURRENT_TIME=$(date +%s)
is_healthy || exit 1
PREVIOUS_HEALTH_TIME=$(cat $HEARTBEAT_FILE | tr -d '[:space:]')
echo $CURRENT_TIME > "$HEARTBEAT_FILE"
if [ "$PREVIOUS_HEALTH_TIME" = "" ]; then
  IS_HEALTHY=1
else
  AGE=$(expr $CURRENT_TIME - $PREVIOUS_HEALTH_TIME)
  IS_HEALTHY=$(expr $AGE '>' $MAX_AGE)
fi
if [ "$IS_HEALTHY" = "0" ]; then
  rm -f $STARTUP_FILE
else
  touch $STARTUP_FILE
fi
