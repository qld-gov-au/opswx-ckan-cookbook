#!/bin/bash
#
# This script is to ensure the consistent backup of our EBS volume onto Amazon Simple Storage Service via snapshots

# Script paramaters

days=<%= node['datashades']['backup']['retention'] %>

echo -e "Automated Daily Snapshot of Data Volume\r\n"

metadata_token=$(curl -X PUT -H "X-aws-ec2-metadata-token-ttl-seconds: 60" http://169.254.169.254/latest/api/token)
placement=$(curl -H "X-aws-ec2-metadata-token: $metadata_token" http://169.254.169.254/latest/meta-data/placement/availability-zone)
region=$(echo ${placement%?})

myid=$(curl -H "X-aws-ec2-metadata-token: $metadata_token" http://169.254.169.254/latest/meta-data/instance-id)

volume=$(aws ec2 describe-volumes --filters Name=attachment.instance-id,Values="${myid}" Name=attachment.delete-on-termination,Values=false --region $region)
vol_id=$(echo ${volume} | jq '.Volumes[].VolumeId' | tr -d '"')
vol_name=$(aws ec2 describe-tags --region $region --filters "Name=resource-id,Values=${vol_id}" "Name=key,Values=Name" | jq '.Tags[].Value' | tr -d '"')

DATE=$(date +"%Y%m%d_%H%M")
Description="Automated ${vol_name} snapshot "${DATE}

echo "Creating snapshot of $vol_name on $vol_id in $region with Description: ${Description}" >> /var/log/ec2backups.log
aws ec2 create-snapshot --volume-id $vol_id --description "${Description}" --region $region --output text >> /var/log/ec2snapshot.log

# Purge old backups
OLD='`'$(date +%Y%m%d --date "$days days ago")'`'

# get snapshot id for all snapshots older than $OLD
snapids=$(aws ec2 describe-snapshots --region $region --filters Name=description,Values="Automated $vol_name *" --query "Snapshots[?StartTime<$OLD]" | jq '.[].SnapshotId' | tr -d '"')

if [ ${#snapids} -eq 0 ]; then
        echo "No snapshots to purge"
        exit 0
fi

readarray snapshots <<< "${snapids}"

for snapshot in "${snapshots[@]}"
	do
		echo "Deleting snapshot $snapshot"
		aws ec2 delete-snapshot --snapshot-id $snapshot --region $region >> /var/log/snapshot_purge.log
	done
